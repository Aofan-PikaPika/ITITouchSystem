<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:ITITouch">

    <!--按钮样式-->
    <LinearGradientBrush x:Key="LinearGadientBlueBackground" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF377FED" Offset="0"/>
        <GradientStop Color="#FF074CC0" Offset="1"/>
    </LinearGradientBrush>
    <!--button1-->
    <Style x:Key="MyWpfButton" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource LinearGadientBlueBackground}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#FF2D78F4"/>
        <Setter Property="FontSize" Value="20"/>


        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="20">
                        <ContentPresenter x:Name="contentPrensenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Border.Effect>
                            <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="0" Opacity="1"/>
                        </Border.Effect>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#FF074CA0"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--button2-->
    <LinearGradientBrush x:Key="LinearGadientBlueBackground1" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#CD8162" Offset="0"/>
        <GradientStop Color="#CD3333" Offset="1"/>
    </LinearGradientBrush>
    <Style x:Key="MyWpfButton2" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource LinearGadientBlueBackground1}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#CD5B45"/>
        <Setter Property="FontSize" Value="20"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="20">
                        <ContentPresenter x:Name="contentPrensenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Border.Effect>
                            <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="0" Opacity="1"/>
                        </Border.Effect>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#CD3333"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--button3-->
    <LinearGradientBrush x:Key="LinearGadientBlueBackground2" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFB90F" Offset="0"/>
        <GradientStop Color="#FF8C00" Offset="1"/>
    </LinearGradientBrush>
    <Style x:Key="MyWpfButton3" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource LinearGadientBlueBackground2}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#FFB90F"/>
        <Setter Property="FontSize" Value="20"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="20">
                        <ContentPresenter x:Name="contentPrensenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Border.Effect>
                            <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="0" Opacity="1"/>
                        </Border.Effect>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#FF7F24"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--button4-->
    <LinearGradientBrush x:Key="LinearGadientBlueBackground3" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#00EE00" Offset="0"/>
        <GradientStop Color="#00CD66" Offset="1"/>
    </LinearGradientBrush>
    <Style x:Key="MyWpfButton4" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource LinearGadientBlueBackground3}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#00EE00"/>
        <Setter Property="FontSize" Value="20"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="20">
                        <ContentPresenter x:Name="contentPrensenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Border.Effect>
                            <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="0" Opacity="1"/>
                        </Border.Effect>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#00CD00"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--button5-->
    <LinearGradientBrush x:Key="LinearGadientBlueBackground4" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#4A708B" Offset="0"/>
        <GradientStop Color="#36648B" Offset="1"/>
    </LinearGradientBrush>
    <Style x:Key="MyWpfButton5" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource LinearGadientBlueBackground4}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#36648B"/>
        <Setter Property="FontSize" Value="20"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="20">
                        <ContentPresenter x:Name="contentPrensenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Border.Effect>
                            <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="0" Opacity="1"/>
                        </Border.Effect>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#191970"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--button6-->
    <LinearGradientBrush x:Key="LinearGadientBlueBackground5" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#87CEFA" Offset="0"/>
        <GradientStop Color="#63B8FF" Offset="1"/>
    </LinearGradientBrush>
    <Style x:Key="MyWpfButton6" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource LinearGadientBlueBackground5}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#87CEFA"/>
        <Setter Property="FontSize" Value="20"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="20">
                        <ContentPresenter x:Name="contentPrensenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Border.Effect>
                            <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="0" Opacity="1"/>
                        </Border.Effect>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#6495ED"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--button7-->
    <LinearGradientBrush x:Key="LinearGadientBlueBackground6" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#AB82FF" Offset="0"/>
        <GradientStop Color="#912CEE" Offset="1"/>
    </LinearGradientBrush>
    <Style x:Key="MyWpfButton7" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource LinearGadientBlueBackground6}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#AB82FF"/>
        <Setter Property="FontSize" Value="20"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="20">
                        <ContentPresenter x:Name="contentPrensenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Border.Effect>
                            <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="0" Opacity="1"/>
                        </Border.Effect>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#8E388E"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--button8-->
    <LinearGradientBrush x:Key="LinearGadientBlueBackground7" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#696969" Offset="0"/>
        <GradientStop Color="#1F1F1F" Offset="1"/>
    </LinearGradientBrush>
    <Style x:Key="MyWpfButton8" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{StaticResource LinearGadientBlueBackground7}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="#696969"/>
        <Setter Property="FontSize" Value="20"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True" CornerRadius="20">
                        <ContentPresenter x:Name="contentPrensenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <Border.Effect>
                            <DropShadowEffect Color="Black" BlurRadius="10" ShadowDepth="0" Opacity="1"/>
                        </Border.Effect>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#000000"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--聊天按钮的样式-->
    <Style x:Key="ChatStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border>
                        <Path x:Name="btnPath" Stretch="Fill" StrokeThickness="1" Stroke="Gray" Fill="WhiteSmoke">
                            <Path.Data>
                                <GeometryGroup>
                                    
                                    <PathGeometry Figures="M 414.961,286.289L 411.335,311.989" />
                                    <PathGeometry Figures="M 362.667,312.333L 472,311.667" />
                                    <PathGeometry Figures="M 421.146,286.465L 423.875,312.475"/>
                                    <RectangleGeometry Rect="285,165,250,120"/>
                                </GeometryGroup>
                            </Path.Data>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Fill" Value="#46A3FF" TargetName="btnPath"/>
                            <Setter Property="Stroke" Value="#46A3FF" TargetName="btnPath"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" Value="#46A3FF" TargetName="btnPath"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked"  Value="true"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Stroke" Value="#46A3FF" TargetName="btnPath"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--本科生-->
    <Style x:Key="BachelorStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border>
                        <Path x:Name="btnPath" Stretch="Fill" StrokeThickness="1" Stroke="Gray" Fill="WhiteSmoke">
                            <Path.Data>
                                <GeometryGroup>
                                    <PathGeometry Figures="M 167.512,140.258L 322.004,189.756L 325.004,419.244L 167.512,371.246L 167.512,140.258 Z" />
                                    <PathGeometry Figures="M 331.003,189.755L 486.996,146.258L 488.496,378.746L 331.003,419.244L 331.003,189.755 Z "/>
                                </GeometryGroup>
                            </Path.Data>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Fill" Value="#46A3FF" TargetName="btnPath"/>
                            <Setter Property="Stroke" Value="#46A3FF" TargetName="btnPath"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" Value="#46A3FF" TargetName="btnPath"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked"  Value="true"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Stroke" Value="#46A3FF" TargetName="btnPath"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--研究生-->
    <Style x:Key="MasterStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border>
                        <Path x:Name="btnPath" Stretch="Fill" StrokeThickness="1" Stroke="Gray" Fill="WhiteSmoke">
                            <Path.Data>
                                <GeometryGroup>
                                    <PathGeometry Figures="M 221.509,129.758L 343.004,129.758L 469.484,228.754L 470.496,434.243L 221.509,434.243L 221.509,129.758 Z " />                                   
                                </GeometryGroup>
                            </Path.Data>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Fill" Value="#46A3FF" TargetName="btnPath"/>
                            <Setter Property="Stroke" Value="#46A3FF" TargetName="btnPath"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" Value="#46A3FF" TargetName="btnPath"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked"  Value="true"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Stroke" Value="#46A3FF" TargetName="btnPath"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    
    <!--学院地图-->
    <Style x:Key="CollegeStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border>
                        <Path x:Name="btnPath" Stretch="Fill" StrokeThickness="1" Stroke="Gray" Fill="WhiteSmoke">
                            <Path.Data>
                                <GeometryGroup>
                                    <PathGeometry Figures="M 0.5,10.9995L 1.99992,238.988L 60.497,279.486L 58.9971,45.4978L 0.5,10.9995 Z" />
                                    <PathGeometry Figures="M 169.992,0.499985L 171.491,243.773L 229.989,286.986L 228.489,37.311L 169.992,0.499985 Z "/>
                                    <PathGeometry Figures="M 72.4964,43.0476L 153.492,6.49974L 153.492,241.25L 93.4953,269.364L 76.9962,274.986L 72.4964,43.0476 Z"/>
                                </GeometryGroup>
                            </Path.Data>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Fill" Value="#46A3FF" TargetName="btnPath"/>
                            <Setter Property="Stroke" Value="#46A3FF" TargetName="btnPath"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" Value="#46A3FF" TargetName="btnPath"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked"  Value="true"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Stroke" Value="#46A3FF" TargetName="btnPath"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--百度地图-->
    <Style x:Key="BaiduStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border>
                        <Path x:Name="btnPath" Stretch="Uniform" StrokeThickness="1" Stroke="Gray" Fill="WhiteSmoke">
                            <Path.Data>
                                <GeometryGroup>
                                    <PathGeometry Figures="M 146.451,433.108L 38.9081,231.797C 19.1554,194.751 -0.597366,157.704 0.5,122.405C 1.59738,87.1056 23.5449,53.5539 53.9056,31.1861C 84.2663,8.81826 123.04,-2.36567 161.083,1.12933C 199.125,4.62429 236.436,22.7982 259.115,46.564C 281.794,70.3298 289.841,99.6876 287.281,128.346C 284.72,157.005 271.552,184.965 258.383,212.925L 146.451,433.108 Z " />                                 
                                </GeometryGroup>
                            </Path.Data>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Fill" Value="#46A3FF" TargetName="btnPath"/>
                            <Setter Property="Stroke" Value="#46A3FF" TargetName="btnPath"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" Value="#46A3FF" TargetName="btnPath"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Stroke" Value="#46A3FF" TargetName="btnPath"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--教职工-->
    <Style x:Key="FacultyStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border>
                        <Path x:Name="btnPath" Stretch="Fill" StrokeThickness="1" Stroke="Gray" Fill="WhiteSmoke">
                            <Path.Data>
                                <GeometryGroup>
                                    <PathGeometry Figures="M 12,30 A 6,10 0 1 1 18,30 L 30,40 L 30,45 L 0,45 L 0,40Z" />
                                  
                                </GeometryGroup>
                            </Path.Data>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Fill" Value="#46A3FF" TargetName="btnPath"/>
                            <Setter Property="Stroke" Value="#46A3FF" TargetName="btnPath"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" Value="#46A3FF" TargetName="btnPath"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Stroke" Value="#46A3FF" TargetName="btnPath"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!--通讯录的样式-->
    <Style x:Key="FriendStyle" TargetType="{x:Type RadioButton}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Border>
                        <Path x:Name="btnPath" Stretch="Fill" StrokeThickness="1" Stroke="Gray" Fill="WhiteSmoke">
                            <Path.Data>
                                <GeometryGroup>
                                    <PathGeometry Figures="M 12,30 A 6,10 0 1 1 18,30 L 30,40 L 30,45 L 0,45 L 0,40Z" />
                                    <PathGeometry Figures="M 25,25 L 35,25"/>
                                    <PathGeometry Figures="M 28,30 L 35,30"/>
                                    <PathGeometry Figures="M 32,35 L 35,35"/>
                                </GeometryGroup>
                            </Path.Data>
                        </Path>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter Property="Fill" Value="#46A3FF" TargetName="btnPath"/>
                            <Setter Property="Stroke" Value="#46A3FF" TargetName="btnPath"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" Value="#46A3FF" TargetName="btnPath"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsChecked" Value="true"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Stroke" Value="#46A3FF" TargetName="btnPath"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--文字样式-->
    <Style x:Key="smallText" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="Gray"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=rb1, Path=IsChecked}" Value="true">
                <Setter Property="Foreground" Value="#46A3FF"></Setter>
            </DataTrigger>
        </Style.Triggers>       
    </Style>

    <Style x:Key="smallText2" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="Gray"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=rb2, Path=IsChecked}" Value="true">
                <Setter Property="Foreground" Value="#46A3FF"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="smallText3" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="Gray"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=bt_return, Path=IsPressed}" Value="true">
                <Setter Property="Foreground" Value="#46A3FF"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="smallText4" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="Gray"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=rb3, Path=IsChecked}" Value="true">
                <Setter Property="Foreground" Value="#46A3FF"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="smallText5" TargetType="{x:Type Label}">
        <Setter Property="Foreground" Value="Gray"></Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding ElementName=rb4, Path=IsChecked}" Value="true">
                <Setter Property="Foreground" Value="#46A3FF"></Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>


    <!--返回按钮-->
    <Style x:Key="ReturnButton" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Path x:Name="bnPath" Stretch="Fill" StrokeThickness="1" Stroke="Gray" Fill="WhiteSmoke" Data="F1 M 336.431,296.756L 477.005,377.678L 476.799,215.477L 336.431,296.756 Z">
                    </Path>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Fill" Value="#46A3FF" TargetName="bnPath"/>
                            <Setter Property="Stroke" Value="#FFFFFF" TargetName="bnPath"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Stroke" Value="#46A3FF" TargetName="bnPath"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsPressed" Value="true"/>
                                <Condition Property="IsMouseOver" Value="true"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.Setters>
                                <Setter Property="Stroke" Value="#FFFFFF" TargetName="bnPath"/>
                            </MultiTrigger.Setters>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--透明按钮-->
    <Style x:Key="TransparentButtonStyle" TargetType="Button">
        <Setter Property="Padding" Value="0"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>







</ResourceDictionary>